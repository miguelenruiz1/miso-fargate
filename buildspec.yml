version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    AWS_ACCOUNT_ID: 988732899429   # <-- reemplaza con tu cuenta
    IMAGE_REPO_NAME: miso_fargate   # <-- reemplaza con tu repositorio

phases:
  pre_build:
    commands:
      - echo "üîê Authenticate Docker to Amazon ECR (CLI v2)‚Ä¶"
      # Obtiene el password y hace login en ECR
      - aws ecr get-login-password \
          --region $AWS_DEFAULT_REGION \
        | docker login \
          --username AWS \
          --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo "üõ†Ô∏è Building Docker image‚Ä¶"
      - docker build -t $IMAGE_REPO_NAME .
      - echo "üè∑Ô∏è Tagging image‚Ä¶"
      - docker tag \
          $IMAGE_REPO_NAME:latest \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

  post_build:
    commands:
      - echo "üöÄ Pushing image to ECR‚Ä¶"
      - docker push \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - echo "üìù Writing imagedefinitions.json for CodeDeploy‚Ä¶"
      - printf '[{"name":"%s","imageUri":"%s"}]' \
          $IMAGE_REPO_NAME \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest \
        > imagedefinitions.json

artifacts:
  # Esto es lo que consume tu etapa de ECS/CodeDeploy
  files:
    - imagedefinitions.json

  # Si usas CodeDeploy Blue/Green con appspec y taskdef externos,
  # def√≠nelos como artefactos secundarios:
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.json
        - taskdef.json
